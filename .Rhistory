Port = config_data$databases$sid_1$port,
dbname = config_data$databases$sid_1$db)
odbc::dbConnect(.connection_string = conn_string)
conn_string
quote_value(conn_string)
odbc::dbConnect(.connection_string = quote_value(conn_string))
odbc::odbcDriverConnect(connection = conn_string)
library(RODBC)
RODBC::odbcDriverConnect(connection = conn_string)
conn_string = '
SERVER=(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=LLIPrdOraLo01.AWS.LloydslistIntelligence.com)(PORT=1521))(CONNECT_DATA=
(SERVICE_NAME=SID1.World)));
uid=VINCENT_GOOD;
pwd=+/u1fla{x}90Q;
'
conn_string = 'SERVER=(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=LLIPrdOraLo01.AWS.LloydslistIntelligence.com)(PORT=1521))(CONNECT_DATA=(SERVICE_NAME=SID1.World)));uid=VINCENT_GOOD;pwd=+/u1fla{x}90Q;'
RODBC::odbcDriverConnect(connection = conn_string)
odbc::dbConnect(.connection_string = conn_string)
driver = "C:/oracle/instantclient_21_13/"
RODBC::odbcDriverConnect(drv = driver, connection = conn_string)
driver = "C:/oracle/instantclient_21_13/"
connection <- odbc::dbConnect(odbc::odbc(),
driver = driver,
UID = config_data$databases$sid_1$user,
PWD = quote_value(config_data$databases$sid_1$password),
Port = config_data$databases$sid_1$port,
dbname = config_data$databases$sid_1$db)
connection <- odbc::dbConnect(drv = odbc::odbc(),
driver = driver,
server = config_data$databases$sid_1$host,
UID = config_data$databases$sid_1$user,
PWD = quote_value(config_data$databases$sid_1$password),
Port = config_data$databases$sid_1$port,
dbname = config_data$databases$sid_1$db)
conn_string = '
(DESCRIPTION=
(ADDRESS =
(PROTOCOL = TCP)
(HOST = LLIPrdOraLo01.AWS.LloydslistIntelligence.com)
(PORT = 1521))
(CONNECT_DATA =
(SERVICE_NAME=SID1.World)));
UID=VINCENT_GOOD;
PWD=+/u1fla{x}90Q;
'
RODBC::odbcDriverConnect(connection = conn_string)
driver = "C:/oracle/instantclient_21_13/"
DBI::dbConnect(drv = driver, connection = conn_string)
odbc::dbConnect(.connection_string = conn_string)
conn_string = 'SERVER=(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=LLIPrdOraLo01.AWS.LloydslistIntelligence.com)(PORT=1521))(CONNECT_DATA=(SERVICE_NAME=SID1.World)));uid=VINCENT_GOOD;pwd=+/u1fla{x}90Q;'
library(RODBC)
RODBC::odbcDriverConnect(connection = conn_string)
conn_string = '
EGG=(DESCRIPTION=
(ADDRESS =
(PROTOCOL = TCP)
(HOST = LLIPrdOraLo01.AWS.LloydslistIntelligence.com)
(PORT = 1521))
(CONNECT_DATA =
(SERVICE_NAME=SID1.World)));
UID=VINCENT_GOOD;
PWD=+/u1fla{x}90Q;
'
odbc::dbConnect(.connection_string = conn_string)
odbc::dbConnect(dsn = "EGG", .connection_string = conn_string)
odbc::dbConnect(odbc::odbc(), dsn = "EGG", .connection_string = conn_string)
conn_string = '
EGG=(DESCRIPTION=
(ADDRESS =
(PROTOCOL = TCP)
(HOST = LLIPrdOraLo01.AWS.LloydslistIntelligence.com)
(PORT = 1521))
(CONNECT_DATA =
(SERVICE_NAME=SID1.World)));
UID=VINCENT_GOOD;
PWD=+/u1fla{x}90Q;
'
odbc::dbConnect(.connection_string = conn_string, drv = odbc::odbc(), dsn = "EGG" )
odbc::dbConnect(dsn = "EGG", .connection_string = conn_string)
RODBC::odbcDriverConnect(conn_string)
conn_string = 'SERVER=(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=LLIPrdOraLo01.AWS.LloydslistIntelligence.com)(PORT=1521))(CONNECT_DATA=(SERVICE_NAME=SID1.World)));uid=VINCENT_GOOD;pwd=+/u1fla{x}90Q;'
conn_string = 'SERVER=(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=LLIPrdOraLo01.AWS.LloydslistIntelligence.com)(PORT=1521))(CONNECT_DATA=(SERVICE_NAME=SID1.World)));UID=VINCENT_GOOD;PWD=+/u1fla{x}90Q;'
library(DBI)
library(RODBC)
RODBC::odbcDriverConnect(conn_string)
odbcListDataSources()
conn_string = '
DRIVER={Oracle in instantclient_21_13};
SERVER=(DESCRIPTION=
(ADDRESS =
(PROTOCOL = TCP)
(HOST = LLIPrdOraLo01.AWS.LloydslistIntelligence.com)
(PORT = 1521))
(CONNECT_DATA =
(SERVICE_NAME=SID1.World)));
UID=VINCENT_GOOD;
PWD=+/u1fla{x}90Q;
'
RODBC::odbcDriverConnect(conn_string)
odbc::dbConnect(.connection_string = conn_string)
odbcListDrivers()
connection <- odbc::dbConnect(drv = odbc::odbc(),
driver = "Oracle in instantclient_21_13",
server = config_data$databases$sid_1$host,
UID = config_data$databases$sid_1$user,
PWD = quote_value(config_data$databases$sid_1$password),
Port = config_data$databases$sid_1$port,
dbname = config_data$databases$sid_1$db)
config_data <- fromJSON(file = "./R/db_config.json")
library(rjson)
odbc::dbConnect(.connection_string = conn_string)
config_data <- fromJSON(file = "./R/db_config.json")
dsn <- "SID"
config_db <-  "sid_1"
connection <- odbc::dbConnect(drv = odbc::odbc(),
driver = "Oracle in instantclient_21_13",
server = config_data$databases$sid_1$host,
UID = config_data$databases$sid_1$user,
PWD = quote_value(config_data$databases$sid_1$password),
Port = config_data$databases$sid_1$port,
dbname = config_data$databases$sid_1$db)
odbcListDrivers()
odbc::dbConnect(drv = odbc::odbc(),,
.connection_string = conn_string)
odbc::dbConnect(drv = odbc::odbc(),
.connection_string = conn_string)
library(odbc)
library(rjson)
odbc::dbConnect(drv = odbc::odbc(),
.connection_string = conn_string)
odbc::dbConnect(.connection_string = conn_string)
odbc::dbConnect(drv = odbc::odbc(),
.connection_string = conn_string)
conn_string = '
DRIVER={Oracle in instantclient_21_13};
SERVER=(DESCRIPTION=
(ADDRESS =
(PROTOCOL = TCP)
(HOST = LLIPrdOraLo01.AWS.LloydslistIntelligence.com)
(PORT = 1521))
(CONNECT_DATA =
(SERVICE_NAME=SID1.World)));
UID=VINCENT_GOOD;
PWD=+/u1fla{x}90Q;
'
library(odbc)
library(rjson)
odbc::dbConnect(drv = odbc::odbc(),
.connection_string = conn_string)
conn_string = '
DRIVER={Oracle in instantclient_21_13};
SERVER={(DESCRIPTION=
(ADDRESS =
(PROTOCOL = TCP)
(HOST = LLIPrdOraLo01.AWS.LloydslistIntelligence.com)
(PORT = 1521))
(CONNECT_DATA =
(SERVICE_NAME=SID1.World)))};
UID=VINCENT_GOOD;
PWD=+/u1fla{x}90Q;
'
library(odbc)
library(rjson)
odbc::dbConnect(drv = odbc::odbc(),
.connection_string = conn_string)
conn_string = '
Driver={Oracle in instantclient_21_13};
Server={(DESCRIPTION=
(ADDRESS =
(PROTOCOL = TCP)
(HOST = LLIPrdOraLo01.AWS.LloydslistIntelligence.com)
(PORT = 1521))
(CONNECT_DATA =
(SERVICE_NAME=SID1.World)))};
Uid=VINCENT_GOOD;
Pwd=+/u1fla{x}90Q;
'
library(odbc)
library(rjson)
odbc::dbConnect(drv = odbc::odbc(),
.connection_string = conn_string)
conn_string = '
Driver=(Oracle in instantclient_21_13);
Server=(DESCRIPTION=
(ADDRESS =
(PROTOCOL = TCP)
(HOST = LLIPrdOraLo01.AWS.LloydslistIntelligence.com)
(PORT = 1521))
(CONNECT_DATA =
(SERVICE_NAME=SID1.World)));
Uid=VINCENT_GOOD;
Pwd=+/u1fla{x}90Q;
'
library(odbc)
library(rjson)
odbc::dbConnect(drv = odbc::odbc(),
.connection_string = conn_string)
conn_string = '
Driver={Oracle in instantclient_21_13};
Server=(DESCRIPTION=
(ADDRESS =
(PROTOCOL = TCP)
(HOST = LLIPrdOraLo01.AWS.LloydslistIntelligence.com)
(PORT = 1521))
(CONNECT_DATA =
(SERVICE_NAME=SID1.World)));
Uid=VINCENT_GOOD;
Pwd=+/u1fla{x}90Q;
'
library(odbc)
library(rjson)
odbc::dbConnect(drv = odbc::odbc(),
.connection_string = conn_string)
conn_string = '
Driver={Oracle in instantclient_21_13};
Dbq=(DESCRIPTION=
(ADDRESS =
(PROTOCOL = TCP)
(HOST = LLIPrdOraLo01.AWS.LloydslistIntelligence.com)
(PORT = 1521))
(CONNECT_DATA =
(SERVICE_NAME=SID1.World)));
Uid=VINCENT_GOOD;
Pwd=+/u1fla{x}90Q;
'
library(odbc)
library(rjson)
odbc::dbConnect(drv = odbc::odbc(),
.connection_string = conn_string)
con <- odbc::dbConnect(drv = odbc::odbc(),
.connection_string = conn_string)
tbl(con, in_schema("SID", "VESSELS")) %>% head(10) %>% collect()
library(dplyr)
library(dbplyr)
tbl(con, in_schema("SID", "VESSELS")) %>% head(10) %>% collect()
con <- odbc::dbConnect(.connection_string = conn_string)
con <- odbc::dbConnect(drv = odbc::odbc(),
driver = "C:/oracle/instantclient_21_13/",
.connection_string = conn_string)
conn_string = '
Dbq=(DESCRIPTION=
(ADDRESS =
(PROTOCOL = TCP)
(HOST = LLIPrdOraLo01.AWS.LloydslistIntelligence.com)
(PORT = 1521))
(CONNECT_DATA =
(SERVICE_NAME=SID1.World)));
Uid=VINCENT_GOOD;
Pwd=+/u1fla{x}90Q;
'
con <- odbc::dbConnect(drv = odbc::odbc(),
driver = "Oracle in instantclient_21_13",
.connection_string = conn_string)
tbl(con, in_schema("SID", "VESSELS")) %>% head(10) %>% collect()
con <- odbc::dbConnect(drv = odbc::odbc(),
driver = "C:/oracle/instantclient_21_13/",
.connection_string = conn_string)
odbc.inst.ini
odbcinst.ini
odbcinst.ini
con <- odbc::dbConnect(drv = odbc::odbc(),
driver = "C:/oracle/instantclient_21_13",
.connection_string = conn_string)
library(odbc)
library(rjson)
con <- odbc::dbConnect(drv = odbc::odbc(),
driver = "C:/oracle/instantclient_21_13",
.connection_string = conn_string)
odbcListDrivers(
keep = getOption("odbc.drivers_keep"),
filter = getOption("odbc.drivers_filter")
)
showMethods("dbConnect")
con <- odbc::dbConnect(drv = odbc::odbc(),
driver = "C:/oracle/instantclient_21_13/ojdbc8.jar",
.connection_string = conn_string)
con <- odbc::dbConnect(drv = odbc::odbc(),
driver = "C:/Windows/System32/odbcad32.exe",
.connection_string = conn_string)
con <- odbc::dbConnect(drv = odbc::odbc(),
driver = "C:/Windows/System32/odbcad32.exe",
.connection_string = conn_string)
odbcListDrivers()
test <- odbcListDrivers()
test$value
odbc.ini
odbcListConfig()
odbcConnectionIcon()
odbc::odbcListObjects()
con <- odbc::dbConnect(drv = odbc::odbc(),
driver = "C:/Windows/System32/odbcad32.exe",
.connection_string = conn_string)
con <- odbc::dbConnect(drv = odbc::odbc(),
driver = "C:/oracle/instantclient_21_13/",
.connection_string = conn_string)
con <- odbc::dbConnect(drv = odbc::odbc(),
driver = "C:/oracle/instantclient_21_13",
.connection_string = conn_string)
conn_string = '
Driver={"Oracle in instantclient_21_13"};
Dbq=(DESCRIPTION=
(ADDRESS =
(PROTOCOL = TCP)
(HOST = LLIPrdOraLo01.AWS.LloydslistIntelligence.com)
(PORT = 1521))
(CONNECT_DATA =
(SERVICE_NAME=SID1.World)));
Uid=VINCENT_GOOD;
Pwd=+/u1fla{x}90Q;
'
con <- odbc::dbConnect(drv = odbc::odbc(),
driver = "C:/oracle/instantclient_21_13",
.connection_string = conn_string)
con <- odbc::dbConnect(drv = odbc::odbc(),
# driver = "C:/oracle/instantclient_21_13",
.connection_string = conn_string)
con <- odbc::dbConnect(drv = odbc::odbc(),
# driver = "C:/oracle/instantclient_21_13",
.connection_string = conn_string)
conn_string = '
Dbq=(DESCRIPTION=
(ADDRESS =
(PROTOCOL = TCP)
(HOST = LLIPrdOraLo01.AWS.LloydslistIntelligence.com)
(PORT = 1521))
(CONNECT_DATA =
(SERVICE_NAME=SID1.World)));
Uid=VINCENT_GOOD;
Pwd=+/u1fla{x}90Q;
'
con <- odbc::dbConnect(drv = odbc::odbc(),
driver = "C:/oracle/instantclient_21_13/sqora32.dll",
.connection_string = conn_string)
con <- odbc::dbConnect(drv = odbc::odbc(),
driver = "C:/oracle/instantclient_21_13/sqora32.dll",
.connection_string = conn_string)
con <- odbc::dbConnect(drv = odbc::odbc(),
driver = "Oracle in instantclient_21_13",
.connection_string = conn_string)
con <- odbc::dbConnect(drv = odbc::odbc(),
driver = "C:\oracle\instantclient_21_13\sqora32.dll",
con <- odbc::dbConnect(drv = odbc::odbc(),
driver = "C:/oracle/instantclient_21_13/sqora32.dll",
.connection_string = conn_string)
con <- odbc::dbConnect(driver = "C:/oracle/instantclient_21_13/sqora32.dll",
.connection_string = conn_string)
con <- odbc::dbConnect(drv = odbc::odbc(),
driver = "C:/oracle/instantclient_21_13/sqora32.dll",
.connection_string = conn_string)
odbcListDrivers()
conn_string = '
Driver={Oracle in instantclient_21_13};
Dbq=(DESCRIPTION=
(ADDRESS =
(PROTOCOL = TCP)
(HOST = LLIPrdOraLo01.AWS.LloydslistIntelligence.com)
(PORT = 1521))
(CONNECT_DATA =
(SERVICE_NAME=SID1.World)));
Uid=VINCENT_GOOD;
Pwd=+/u1fla{x}90Q;
'
con <- odbc::dbConnect(drv = odbc::odbc(),
.connection_string = conn_string)
conn_string = '
Driver={C:/oracle/instantclient_21_13/sqora32.dll};
Dbq=(DESCRIPTION=
(ADDRESS =
(PROTOCOL = TCP)
(HOST = LLIPrdOraLo01.AWS.LloydslistIntelligence.com)
(PORT = 1521))
(CONNECT_DATA =
(SERVICE_NAME=SID1.World)));
Uid=VINCENT_GOOD;
Pwd=+/u1fla{x}90Q;
'
con <- odbc::dbConnect(drv = odbc::odbc(),
.connection_string = conn_string)
con <- odbc::dbConnect(drv = odbc::odbc(),
driver = "C:/oracle/instantclient_21_13/sqora32.dll",
.connection_string = conn_string)
conn_string = '
Driver={Oracle};
Dbq=(DESCRIPTION=
(ADDRESS =
(PROTOCOL = TCP)
(HOST = LLIPrdOraLo01.AWS.LloydslistIntelligence.com)
(PORT = 1521))
(CONNECT_DATA =
(SERVICE_NAME=SID1.World)));
Uid=VINCENT_GOOD;
Pwd=+/u1fla{x}90Q;
'
con <- odbc::dbConnect(drv = odbc::odbc(),
driver = "C:/oracle/instantclient_21_13/sqora32.dll",
.connection_string = conn_string)
con <- odbc::dbConnect(drv = odbc::odbc(),
driver = "C:/oracle/instantclient_21_13/",
.connection_string = conn_string)
conn_string = '
Driver={sqora32.dll};
Dbq=(DESCRIPTION=
(ADDRESS =
(PROTOCOL = TCP)
(HOST = LLIPrdOraLo01.AWS.LloydslistIntelligence.com)
(PORT = 1521))
(CONNECT_DATA =
(SERVICE_NAME=SID1.World)));
Uid=VINCENT_GOOD;
Pwd=+/u1fla{x}90Q;
'
con <- odbc::dbConnect(drv = odbc::odbc(),
driver = "C:/oracle/instantclient_21_13/",
.connection_string = conn_string)
list.of.packages <- c("odbc", "dplyr", "dbplyr", "rjson")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
config_data <- fromJSON(file = "./R/db_config.json")
conn_string = paste0("
Driver={sqora32.dll};
Dbq=(DESCRIPTION=
(ADDRESS =
(PROTOCOL = TCP)
(HOST = ", config_data$databases$sid_1$host, ")
(PORT = ", config_data$databases$sid_1$port, "))
(CONNECT_DATA =
(SERVICE_NAME=", config_data$databases$sid_1$db, ")));
Uid=", config_data$databases$sid_1$user, ";
Pwd=", config_data$databases$sid_1$password, ";
")
conn_string
con <- odbc::dbConnect(drv = odbc::odbc(),
driver = "Oracle in instantclient_21_13",
.connection_string = conn_string)
tbl(con, in_schema("SID", "VESSELS")) %>% head(10) %>% collect()
setwd(".")
getwd()
library(roxygen2)
library(pkgload)
roxygenise()
load_all(".")
vngHelperFunctions::db_connection(config_file = "./R/db_config.json",
config_db = "sid_1")
vngHelperFunctions::db_connection(config_file = "./R/db_config.json",
config_db = "sidDev")
library(roxygen2)
library(pkgload)
roxygenise()
roxygenise()
library(roxygen2)
library(pkgload)
roxygenise()
load_all(".")
vngHelperFunctions::db_connection(config_file = "../notebook/db_config.json",
config_db = "sid_1")
helper_functions::db_connection(config_file = "../notebook/db_config.json",
config_db = "sid_1")
getwd()
helper_functions::db_connection(config_file = "./notebook/db_config.json",
config_db = "sid_1")
helper_functions::db_connection(config_file = "../config/db_config.json",
config_db = "sid_1")
helper_functions::db_connection(config_file = "../../config/db_config.json",
config_db = "sid_1")
library(roxygen2)
library(pkgload)
roxygenise()
library(roxygen2)
library(pkgload)
roxygenise()
load_all(".")
library(roxygen2)
library(pkgload)
roxygenise()
load_all(".")
helper_functions::db_connection(config_file = "../../config/db_config.json",
config_db = "sid_1")
helper_functions::db_connection(config_file = "../../config/db_config.json",
config_db = "sid_dev")
library(roxygen2)
library(pkgload)
roxygenise()
load_all(".")
helper_functions::db_connection(config_file = "../../config/db_config.json",
config_db = "sid_1")
con <- helper_functions::db_connection(config_file = "../../config/db_config.json",
config_db = "sid_1")
library(dbplyr)
tbl(con, "VESSELS")
library(dply)
library(dplyr)
library(dplyrlibrary(dbplyr)
library(dplyr)
library(dbplyr)
tbl(con, "VESSELS")
library(roxygen2)
library(pkgload)
roxygenise()
load_all(".")
con <- helper_functions::db_connection(config_file = "../../config/db_config.json",
config_db = "sid_1")
library(dplyr)
library(dbplyr)
tbl(con, "VESSELS")
tbl(con, "VSLNAMES")
library(roxygen2)
library(pkgload)
roxygenise()
library(roxygen2)
library(pkgload)
roxygenise()
load_all(".")
